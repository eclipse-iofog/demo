trigger:
  - master
  - develop
  - release/*
pr:
  - master
  - develop
schedules:
- cron: "0 0 * * *"
  displayName: Daily build (UTC)
  branches:
    include:
    - master
    - develop

pool:
  vmImage: 'ubuntu-16.04'

steps:

- task: DockerInstaller@0
  displayName: Docker Installer
  inputs:
    dockerVersion: 19.03.2
    releaseType: stable

- script: |
    # https://packagecloud.io/install/repositories/iofog/iofogctl/script.deb.sh | sudo bash
    # Using dev version of iofogctl until 1.3.0 release
    curl -s https://8c90601638aff0b3fb520971175089bbaba2cf7f29be9528:@packagecloud.io/install/repositories/iofog/iofogctl-snapshots/script.deb.sh | sudo bash
    sudo apt install iofogctl
  displayName: 'Install iofogctl'

- script: |
    echo $(gcp.svcacc) | docker login -u _json_key --password-stdin https://gcr.io
  displayName: 'Docker connect to Registry'

- script: |
    docker pull gcr.io/focal-freedom-236620/controller:develop
    docker pull gcr.io/focal-freedom-236620/agent:develop
  displayName: 'Pull latest images'

- script: |
    # ./start.sh
    # Use dev version of agent and controller until 1.3.0 release
    ./start.sh -ct gcr.io/focal-freedom-236620/controller:develop -a gcr.io/focal-freedom-236620/agent:develop
  displayName: 'Start Connector, Controller, and Agent'

- script: |
    ./test.sh
  displayName: 'Run Tests'

- script: |
    ./stop.sh
  displayName: 'Stop Connector, Controller, and Agent'

- script: |
    tar -c --transform 's,^\.,demo,' --exclude-from=.artifactignore -v --bzip2 -f $BUILD_ARTIFACTSTAGINGDIRECTORY/demo.tar.bz2 .

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/demo.tar.bz2'
    artifactName: 'demo.$(Build.BuildId).tar.bz2'

- script: |
    echo "===== IOFOG AGENT LOG ====="
    docker exec iofog-agent cat /var/log/agent.out.log
  displayName: 'Print logs'
  condition: failed()
